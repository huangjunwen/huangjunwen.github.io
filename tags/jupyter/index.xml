<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jupyter on Coder Papa</title>
    <link>http://127.0.0.1:1313/tags/jupyter/</link>
    <description>Recent content in jupyter on Coder Papa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 27 Aug 2022 10:14:17 +0000</lastBuildDate><atom:link href="http://127.0.0.1:1313/tags/jupyter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jupyterlite</title>
      <link>http://127.0.0.1:1313/posts/2022/jupyterlite/</link>
      <pubDate>Sat, 27 Aug 2022 10:14:17 +0000</pubDate>
      
      <guid>http://127.0.0.1:1313/posts/2022/jupyterlite/</guid>
      <description>最近总是接触各种 Jupyter…（JupyterLab/JupyterHub），发现居然还有可以完全跑在浏览器上的 Jupyterlite，那是不是可以直接放一个到这儿呢？
大致的概念 原来的 Jupyter 是传统的 CS 模式，各种语言（e.g. python）的 kernel 是跑在服务端的
但现在也有了 python（和一些常用的库）的 WebAssembly 移植版（e.g. pyodide）， 这样一来 kernel 也可以在浏览器上实现了 （e.g. pyolite）， 因此可以创建一个全静态的 site，UI 和 kernel 都在浏览器中运行， 中间用 mock-socket 假装通讯， 完整地把 notebook 那一套 CS 模式移植过来
部署流程 安装 jupyterlite CLI pip install --pre jupyterlite（现在还处于 pre-release 的状态）， 更多可安装的 addons 可以看这里
生成 site 引自 jupyterlite CLI 文档，
 The jupyter lite (or jupyter-lite) CLI provides tools for lifecycle of combining…
 the core JupyterLite static assets extra application features like Lab Extensions and settings kernel-specific resources like Python wheels user-authored content like Notebooks  … into a ready-to-deploy (and optionally reproducible) Jupyter sites which require an HTTP server, but no application server.</description>
    </item>
    
  </channel>
</rss>
